#! /bin/zsh

## Justin Carr
## 7/2/2013

## /Dotfiles/_check2
## Identifies and prints files from Dotfiles/src/

# Globals

PROJ_DIR="uninit"
DEBUG=true
CHECK_ONLY=true
DOTFILES=()
BACKUP_TARGETS=()
BACKUP_DIR_NAME=~/backupDotfiles

#Functions

function help_text {

    echo "_check2 requires either:"
    echo "-c :: check state of /Dotfiles/src/"
    echo "-b :: check state of /Dotfiles/src/ and backup local versions to ~/.backupDotfiles"
    echo

}

function check_src {

    cd ./src/
    if $DEBUG
    then
        pwd
        ls -al
    fi

    while read -r -d $'\0' # Read should break the find input by null character 
    do
    DOTFILES+=("$REPLY")
    done < <(find . ! -name . -prune -print0)

    for d in $DOTFILES
    do
        # Check to see if there's already a file with this name in the
        # home directory
        cd 
        if [ -e $d ]
        then
            BACKUP_TARGETS+=$d
        fi
        cd -
    done
     
    echo
    echo "[ FOUND ]"
    for n in $DOTFILES
    do
        echo $n
    done
    echo "[ REPLACE ]"
    for n in $BACKUP_TARGETS
    do
        echo $n
    done

}

function create_backup_dir {
    
    if $DEBUG
    then 
        echo "Begin create_backup_dir..."
    fi

    if [ -e $BACKUP_DIR_NAME ]
    then
        echo "$BACKUP_DIR_NAME found in home directory."
        echo "Using existing $BACKUP_DIR_NAME"
    else
        echo "$BACKUP_DIR_NAME not found in home directory."
        echo "Creating $BACKUP_DIR_NAME"
        mkdir $BACKUP_DIR_NAME
    fi

    if $DEBUG
    then 
        echo "End create_backup_dir..."
    fi
}

function backup_local_dotfiles {

    if $DEBUG
    then
        echo "Begin backup_local_dotfiles..."
    fi

    local run_results=$(date)

    cd $BACKUP_DIR_NAME
    mkdir $run_results
    cd
    
    for n in $BACKUP_FILES
    do
        mv $n ~/$BACKUP_DIR_NAME/$run_results/
    done
    
    if $DEBUG
    then
        echo "End backup_local_dotfiles."
    fi

}

# Main {

set -e

if $DEBUG
then
    echo "Begin main in _check2..."
fi

if [ $# -ne 1 ]
then
    echo "INVALID INVOCATION OF _check2: $# arguments"
    help_text
    exit 1
fi

while getopts ":cb" opt;
do
    case $opt in
        c)
            # CHECK_ONLY=true; (default)
            echo "Checking /Dotfiles/src/ ..."
            break
            ;;
        b)
            CHECK_ONLY=false;
            break
            ;;
        \?)
            echo "INVALID INVOCATION OF _check2: $OPTARG"
            help_text
            exit 1
            ;;
    esac
done

cd .. # /Dotfiles/setup --> /Dotfiles/
PROJ_DIR=$(pwd)

check_src
if ! $CHECK_ONLY
then
    create_backup_dir
fi

if [ $(pwd) != $PROJ_DIR ]
then
    cd $PROJ_DIR
fi

if $DEBUG
then
    echo "End main in _check2."
fi

# }
